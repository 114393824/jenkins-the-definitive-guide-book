<?xml version='1.0' encoding='UTF-8'?>
<hudson.maven.MavenBuild>
  <actions>
    <hudson.maven.reporters.SurefireReport>
      <owner class="hudson.maven.MavenBuild" reference="../../.."/>
      <descriptions class="java.util.concurrent.ConcurrentHashMap" serialization="custom">
        <unserializable-parents/>
        <java.util.concurrent.ConcurrentHashMap>
          <default>
            <segmentMask>15</segmentMask>
            <segmentShift>28</segmentShift>
            <segments>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
            </segments>
          </default>
          <null/>
          <null/>
        </java.util.concurrent.ConcurrentHashMap>
      </descriptions>
      <failCount>0</failCount>
      <skipCount>0</skipCount>
      <totalCount>20</totalCount>
      <testData/>
    </hudson.maven.reporters.SurefireReport>
    <hudson.maven.reporters.MavenArtifactRecord>
      <records/>
      <parent reference="../../.."/>
      <pomArtifact>
        <groupId>com.ciwithhudson.gameoflife</groupId>
        <artifactId>gameoflife-core</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <type>pom</type>
        <fileName>pom.xml</fileName>
        <canonicalName>gameoflife-core-0.0.1-SNAPSHOT.pom</canonicalName>
        <md5sum>12c104d3bc9f1f54b94af89ed2e8a8d4</md5sum>
      </pomArtifact>
      <mainArtifact>
        <groupId>com.ciwithhudson.gameoflife</groupId>
        <artifactId>gameoflife-core</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <type>jar</type>
        <fileName>gameoflife-core-0.0.1-SNAPSHOT.jar</fileName>
        <canonicalName>gameoflife-core-0.0.1-SNAPSHOT.jar</canonicalName>
        <md5sum>ee2bfb7fb62252787e0e45eb9ca69998</md5sum>
      </mainArtifact>
      <attachedArtifacts/>
    </hudson.maven.reporters.MavenArtifactRecord>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <build class="hudson.maven.MavenBuild" reference="../../.."/>
      <record>
        <entry>
          <string>commons-cli:commons-cli-1.2.jar</string>
          <string>bfdcae1ff93f0c07d733f03bdce28c9e</string>
        </entry>
        <entry>
          <string>com.ciwithhudson.gameoflife:gameoflife-core-0.0.1-SNAPSHOT.jar</string>
          <string>ee2bfb7fb62252787e0e45eb9ca69998</string>
        </entry>
        <entry>
          <string>junit:junit-4.7.jar</string>
          <string>b03d4c6ff4cedcd731d6a6d1a3149f65</string>
        </entry>
        <entry>
          <string>org.hamcrest:hamcrest-all-1.1.jar</string>
          <string>3f1e1a09534bb8fdb81eb7abf16ea311</string>
        </entry>
        <entry>
          <string>com.ciwithhudson.gameoflife:pom.xml</string>
          <string>12c104d3bc9f1f54b94af89ed2e8a8d4</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
    <hudson.plugins.disk__usage.BuildDiskUsageAction>
      <diskUsage>
        <buildUsage>49619</buildUsage>
        <wsUsage>0</wsUsage>
      </diskUsage>
      <build class="hudson.maven.MavenBuild" reference="../../.."/>
    </hudson.plugins.disk__usage.BuildDiskUsageAction>
  </actions>
  <number>1</number>
  <result>SUCCESS</result>
  <duration>5160</duration>
  <keepLog>false</keepLog>
  <workspace>/Users/johnsmart/Projects/Books/continuous-integration-with-hudson/resources/book-examples/chapter-automated-tests/hudson-data/jobs/gameoflife-default/workspace/</workspace>
  <projectActionReporters>
    <hudson.maven.reporters.SurefireArchiver>
      <result>
        <suites>
          <hudson.tasks.junit.SuiteResult>
            <file>/Users/johnsmart/Projects/Books/continuous-integration-with-hudson/resources/book-examples/chapter-automated-tests/hudson-data/jobs/gameoflife-default/workspace/target/surefire-reports/TEST-com.ciwithhudson.gameoflife.domain.CellTest.xml</file>
            <name>com.ciwithhudson.gameoflife.domain.CellTest</name>
            <duration>0.0020</duration>
            <cases>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0010</duration>
                <className>com.ciwithhudson.gameoflife.domain.CellTest</className>
                <testName>aLivingCellShouldPrintAsAPlus</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.CellTest</className>
                <testName>aDeadCellShouldPrintAsAPlus</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0010</duration>
                <className>com.ciwithhudson.gameoflife.domain.CellTest</className>
                <testName>thePlusSymbolShouldProduceALivingCell</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.CellTest</className>
                <testName>theMinusSymbolShouldProduceADeadCell</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
            </cases>
          </hudson.tasks.junit.SuiteResult>
          <hudson.tasks.junit.SuiteResult>
            <file>/Users/johnsmart/Projects/Books/continuous-integration-with-hudson/resources/book-examples/chapter-automated-tests/hudson-data/jobs/gameoflife-default/workspace/target/surefire-reports/TEST-com.ciwithhudson.gameoflife.domain.GridTest.xml</file>
            <name>com.ciwithhudson.gameoflife.domain.GridTest</name>
            <duration>0.027</duration>
            <cases>
              <hudson.tasks.junit.CaseResult>
                <duration>0.026</duration>
                <className>com.ciwithhudson.gameoflife.domain.GridTest</className>
                <testName>shouldCountZeroWhenAllNeighboursAreDead</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0010</duration>
                <className>com.ciwithhudson.gameoflife.domain.GridTest</className>
                <testName>shouldCountZeroInCornersWhenAllNeighboursAreDead</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
            </cases>
          </hudson.tasks.junit.SuiteResult>
          <hudson.tasks.junit.SuiteResult>
            <file>/Users/johnsmart/Projects/Books/continuous-integration-with-hudson/resources/book-examples/chapter-automated-tests/hudson-data/jobs/gameoflife-default/workspace/target/surefire-reports/TEST-com.ciwithhudson.gameoflife.domain.UniverseTest.xml</file>
            <name>com.ciwithhudson.gameoflife.domain.UniverseTest</name>
            <duration>0.0050000004</duration>
            <cases>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0020</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aUniverseIsATwoDimentionalGridOfCells</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>theUniverseIsInitiallyVoidOfLife</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aNewVersionOfTheUniverseEvolvesEachGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>toStringShouldPrintTheFullCellGrid</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>anEmptyGridCanBeInitializedWithAFormattedGridString</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0010</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aPopulatedGridCanBeInitializedWithAFormattedGridString</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aLiveCellWithNoNeighboursWillDieInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aLiveCellWithOneNeighbourWillDieInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aLiveCellWithTwoNeighboursWillLiveInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0010</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aLiveCellWithThreeNeighboursWillLiveInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aLiveCellWithFourNeighboursWillDieInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aLiveCellWithFiveNeighboursWillDieInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0010</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aDeadCellWithThreeNeighboursWillLiveInTheNextGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
              <hudson.tasks.junit.CaseResult>
                <duration>0.0</duration>
                <className>com.ciwithhudson.gameoflife.domain.UniverseTest</className>
                <testName>aUniverseCanHaveManySuccessiveGeneration</testName>
                <skipped>false</skipped>
                <failedSince>0</failedSince>
              </hudson.tasks.junit.CaseResult>
            </cases>
          </hudson.tasks.junit.SuiteResult>
        </suites>
        <duration>0.034</duration>
      </result>
    </hudson.maven.reporters.SurefireArchiver>
  </projectActionReporters>
  <executedMojos>
    <hudson.maven.ExecutedMojo>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-resources-plugin</artifactId>
      <version>2.3</version>
      <goal>resources</goal>
      <executionId>default-resources</executionId>
      <duration>19</duration>
      <digest>5c52fa19118874a38c63a34262c77497</digest>
    </hudson.maven.ExecutedMojo>
    <hudson.maven.ExecutedMojo>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>2.1</version>
      <goal>compile</goal>
      <executionId>default-compile</executionId>
      <duration>678</duration>
      <digest>233bf0b11763e61431649356d4dee9ec</digest>
    </hudson.maven.ExecutedMojo>
    <hudson.maven.ExecutedMojo>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-resources-plugin</artifactId>
      <version>2.3</version>
      <goal>testResources</goal>
      <executionId>default-testResources</executionId>
      <duration>4</duration>
      <digest>5c52fa19118874a38c63a34262c77497</digest>
    </hudson.maven.ExecutedMojo>
    <hudson.maven.ExecutedMojo>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>2.1</version>
      <goal>testCompile</goal>
      <executionId>default-testCompile</executionId>
      <duration>121</duration>
      <digest>233bf0b11763e61431649356d4dee9ec</digest>
    </hudson.maven.ExecutedMojo>
    <hudson.maven.ExecutedMojo>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>2.4.3</version>
      <goal>test</goal>
      <executionId>default-test</executionId>
      <duration>883</duration>
      <digest>337e44f7883e7145a974ffdc7858ec8f</digest>
    </hudson.maven.ExecutedMojo>
    <hudson.maven.ExecutedMojo>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-jar-plugin</artifactId>
      <version>2.2</version>
      <goal>jar</goal>
      <executionId>default-jar</executionId>
      <duration>38</duration>
      <digest>0fe7d911e51cecfd061ecfbd0ac702ba</digest>
    </hudson.maven.ExecutedMojo>
  </executedMojos>
</hudson.maven.MavenBuild>