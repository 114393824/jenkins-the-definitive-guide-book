<?xml version='1.0' encoding='UTF-8'?>
<hudson.maven.MavenModuleSetBuild>
  <actions>
    <hudson.model.CauseAction>
      <causes>
        <hudson.triggers.SCMTrigger_-SCMTriggerCause/>
      </causes>
    </hudson.model.CauseAction>
    <hudson.scm.SubversionTagAction>
      <build class="hudson.maven.MavenModuleSetBuild" reference="../../.."/>
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <no-comparator/>
        <entry>
          <hudson.scm.SubversionSCM_-SvnInfo>
            <url>svn://localhost/gameoflife/trunk</url>
            <revision>15</revision>
          </hudson.scm.SubversionSCM_-SvnInfo>
          <list/>
        </entry>
      </tags>
    </hudson.scm.SubversionTagAction>
    <hudson.scm.SVNRevisionState>
      <revisions>
        <entry>
          <string>svn://localhost/gameoflife/trunk</string>
          <long>15</long>
        </entry>
      </revisions>
    </hudson.scm.SVNRevisionState>
    <hudson.maven.reporters.SurefireAggregatedReport>
      <owner class="hudson.maven.MavenModuleSetBuild" reference="../../.."/>
      <descriptions class="java.util.concurrent.ConcurrentHashMap" serialization="custom">
        <unserializable-parents/>
        <java.util.concurrent.ConcurrentHashMap>
          <default>
            <segmentMask>15</segmentMask>
            <segmentShift>28</segmentShift>
            <segments>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
              <java.util.concurrent.ConcurrentHashMap_-Segment>
                <sync class="java.util.concurrent.locks.ReentrantLock$NonfairSync" serialization="custom">
                  <java.util.concurrent.locks.AbstractQueuedSynchronizer>
                    <default>
                      <state>0</state>
                    </default>
                  </java.util.concurrent.locks.AbstractQueuedSynchronizer>
                  <java.util.concurrent.locks.ReentrantLock_-Sync>
                    <default/>
                  </java.util.concurrent.locks.ReentrantLock_-Sync>
                </sync>
                <loadFactor>0.75</loadFactor>
              </java.util.concurrent.ConcurrentHashMap_-Segment>
            </segments>
          </default>
          <null/>
          <null/>
        </java.util.concurrent.ConcurrentHashMap>
      </descriptions>
      <failCount>3</failCount>
      <skipCount>0</skipCount>
      <totalCount>22</totalCount>
      <children>
        <hudson.tasks.test.AggregatedTestResultAction_-Child>
          <name>com.ciwithhudson.gameoflife:gameoflife-core</name>
          <build>7</build>
        </hudson.tasks.test.AggregatedTestResultAction_-Child>
      </children>
    </hudson.maven.reporters.SurefireAggregatedReport>
    <hudson.maven.reporters.MavenAggregatedArtifactRecord>
      <records/>
      <parent reference="../../.."/>
    </hudson.maven.reporters.MavenAggregatedArtifactRecord>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <build class="hudson.maven.MavenModuleSetBuild" reference="../../.."/>
      <record>
        <entry>
          <string>commons-cli:commons-cli-1.2.jar</string>
          <string>bfdcae1ff93f0c07d733f03bdce28c9e</string>
        </entry>
        <entry>
          <string>com.ciwithhudson.gameoflife:gameoflife-core-0.0.1-SNAPSHOT.jar</string>
          <string>29705105df2909b93e8fea1c4c42f831</string>
        </entry>
        <entry>
          <string>junit:junit-4.7.jar</string>
          <string>b03d4c6ff4cedcd731d6a6d1a3149f65</string>
        </entry>
        <entry>
          <string>org.hamcrest:hamcrest-all-1.1.jar</string>
          <string>3f1e1a09534bb8fdb81eb7abf16ea311</string>
        </entry>
        <entry>
          <string>com.ciwithhudson.gameoflife:pom.xml</string>
          <string>12c104d3bc9f1f54b94af89ed2e8a8d4</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
  </actions>
  <number>7</number>
  <result>SUCCESS</result>
  <duration>14317</duration>
  <charset>MacRoman</charset>
  <keepLog>false</keepLog>
  <builtOn></builtOn>
  <workspace>/Users/johnsmart/Projects/Books/continuous-integration-with-hudson/resources/book-examples/chapter-automated-tests/hudson-data/jobs/gameoflife-default/workspace</workspace>
  <hudsonVersion>1.352</hudsonVersion>
  <scm class="hudson.scm.SubversionChangeLogParser"/>
  <culprits>
    <string>unknown</string>
  </culprits>
</hudson.maven.MavenModuleSetBuild>