Write the code quality chapter. 

This chapter needs to contain stuff on code-quality related report plugins like:
* Violations
* Cobertura
* Clover
* Checkstyle, Dry, Findbugs, PMD, Task Scanner, Compiler Warnings
* Static Code Analysis Plug-ins
* Serenity

It also needs to explain the idea of a dedicated code quality build, and the idea of a zero-tolerance code quality policy (code quality build that fails if there are issues).

It also should talk about Sonar integration. 

We should also cover non-Java tools:
* Ruby metrics plugin for Ruby projects
* Code Scanner plugin for C++

Plan

* Why monitor code quality
* What aspects of code quality can you monitor?
* Installing the code quality plugins
* Monitoring coding standards and copy-paste with Checkstyle
* Monitoring potential bugs with Findbugs
* Monitoring code coverage with Cobertura
* Advanced code coverage with Clover
* Keeping tabs on compiler warnings
* Keeping track of TODOs, FIXMEs and so on
* More advanced analysis
* Integrating with Sonar
  * Introducing Sonar
  * Installing Sonar
  * Using Sonar with Hudson
  * Using Sonar as the reference for checkstyle and PMD rulesets 


Introduction

Why Monitor Code Quality
	- Enforce coding standards within a project or across an organization
	- Consistent coding style (naming conventions, code layout, etc...) lowers maintenance costs and makes it easier to work on code written by other team members
	- Avoid potential maintenance issues - example of missing brackets
	- Detect architectural issues - checkstyle packages rules
	- Detect bugs earlier - example of real errors detected by FindBugs
	- Keep tabs on developer-written tags (TODOs, etc)
	
What Aspects of Code Quality can you measure
	- Coding standards
	- Poor coding practices
	- Potential bugs
	- Compiler warnings
	- TODOs and FIXMEs
	
- Code Quality strategies
	- Passive monitoring
		- Keep graphs of code quality metrics, but don't enforce the rules in any real way. Easy to implement but not very effective.
	- Active Monitoring
		- Keep graphs of code quality, and review them with team members
		
	- Active Monitoring _ IDE integration
		- Use IDE plugins so that developers can see and apply coding standards directly from within the IDE
		- 

